<?xml version="1.0" encoding="UTF-8" ?> 
    <!DOCTYPE mapper 
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.timss.operation.dao.RulesDao">
	
	<!--说明：#{}内的参数，需要与传入的Rules中bean的属性相同，SQL语句中的列名为数据库中的cloumn名称-->
	
	<insert id="insertRules" parameterType="Rules">
		<!--Oracle中返回自增主键到Rules中的方法 -->
		 <selectKey resultType="int" keyProperty="id" order="BEFORE">
			select seq_opr_rules.nextval from dual
		</selectKey> 
		insert into opr_rules( id, num, name, period, available, 
							dutyCount, changeLimit, pollSequence,isXzb, xzCount, 
							siteId ) 
		values(#{id,jdbcType=NUMERIC}, #{num,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{period,jdbcType=NUMERIC},#{available,jdbcType=VARCHAR}, 
		 #{dutyCount,jdbcType=NUMERIC}, #{changeLimit,jdbcType=NUMERIC}, #{pollSequence,jdbcType=VARCHAR},#{isXzb,jdbcType=VARCHAR}, #{ xzCount ,jdbcType=NUMERIC}, 
		 #{siteId,jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertRulesByFormVo" parameterType="RulesFormVo">
		<!--Oracle中返回自增主键到Rules中的方法 -->
		 <selectKey resultType="int" keyProperty="id" order="BEFORE">
			select seq_opr_rules.nextval from dual
		</selectKey> 
		insert into opr_rules( 
			id, num, name, period, available,
			 dutyCount, changeLimit, pollSequence,isXzb,xzCount, 
			 siteId  ) 
		values(#{id,jdbcType=NUMERIC}, #{num,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{period,jdbcType=NUMERIC}, #{available,jdbcType=VARCHAR},
		  #{dutyCount,jdbcType=NUMERIC}, #{changeLimit,jdbcType=NUMERIC}, #{pollSequence,jdbcType=VARCHAR},#{isXzb,jdbcType=VARCHAR},#{xzCount,jdbcType=NUMERIC},
		  #{siteId,jdbcType=VARCHAR})
	</insert>
	
	<update id="updateRules" parameterType="Rules">
		update opr_rules set num = #{num,jdbcType=VARCHAR}, name = #{name,jdbcType=VARCHAR} ,period = #{ period,jdbcType=NUMERIC }, 
		       siteId = #{ siteId,jdbcType=VARCHAR} , available = #{ available,jdbcType=VARCHAR }, 
		       dutyCount = #{ dutyCount,jdbcType=NUMERIC } , changeLimit = #{ changeLimit,jdbcType=NUMERIC }, 
		       pollSequence = #{ pollSequence,jdbcType=VARCHAR },  isXzb = #{isXzb,jdbcType=VARCHAR}, xzCount = #{ xzCount,jdbcType=NUMERIC }
		       where id= #{ id,jdbcType=NUMERIC }
	</update>
		
	<select id="queryRulesById" parameterType="int" resultType="Rules">
		select * from opr_rules where id= #{ id }
	</select>
	
	<delete id="deleteRulesById" parameterType="int">
		delete from opr_rules where id= #{ id }
	</delete>
	
	<select id="queryAllRules" resultType="Rules">
		select * from opr_rules
	</select>
	
	<select id="queryRulesByPage" resultType="Rules">
		select * from opr_rules
	</select>
	
	<select id="queryRulesBySearch" resultType="Rules" >
		select * from opr_rules where 1 = 1
		<if test="params.id != null and params.id != '' ">
		 	and id like '%${params.id}%'
		</if>
		<if test="params.num != null and params.num !='' ">
		 	and num like '%${ params.num }%'
		</if>
		<if test="params.name != null and params.name != '' ">
		 	and name like '%${ params.name }%'
		</if>
		<if test="params.period != null and params.period != '' ">
		 	and sortType like '%${ params.sortType }%'
		</if>
		<if test="params.siteId != null and params.siteId != '' ">
		 	and siteId like '%${ params.siteId }%'
		</if>
		<if test="params.available != null and params.available != '' ">
		 	and siteId like '%${ params.available }%'
		</if>
		<if test="params.dutyCount != null and params.dutyCount != '' ">
		 	and siteId like '%${ params.dutyCount }%'
		</if>
		<if test="params.dutyCount != null and params.dutyCount != '' ">
		 	and siteId like '%${ params.dutyCount }%'
		</if>
	</select>
	
	<update id="updateRulesByFormVo" parameterType="RulesFormVo">
		update opr_rules set num = #{num}, name = #{name} 
		       where id= #{ id }
	</update>
	
	<!-- 当使用该Mybatis与Spring整合的时候，该文件必须和相应的Mapper接口文件同名，并在同一路径下 -->
</mapper> 