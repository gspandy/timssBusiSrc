<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.timss.pms.dao.PayplanTmpDao">

<!--说明：#{}内的参数，需要与传入的User中bean的属性相同，SQL语句中的列名为数据库中的cloumn名称-->

    <resultMap type="com.timss.pms.bean.PayplanTmp" id="payplanTmpMap">
		<id property="id" column="id"/>
		<result property="contractId" column="contract_id"/>
		
		<result property="payType" column="pay_type"/>
		<result property="paySum" column="pay_sum"/>
		<result property="percent" column="percent"/>
		<result property="needchecked" column="needchecked"/>
		<result property="payStatus" column="pay_status"/>
		<result property="checkStatus" column="check_status"/>
		<result property="status" column="status"/>
		<result property="siteid" column="siteid"/>
		<result property="command" column="command"/>
		<result property="flowId" column="flow_id"/>
		<result property="payplanId" column="payplan_id"/>
	</resultMap>

     <resultMap type="com.timss.pms.vo.PayplanTmpVo" id="payplanTmpVoMap">
		<id property="id" column="id"/>
		<result property="contractId" column="contract_id"/>
		<result property="payType" column="pay_type"/>
		<result property="paySum" column="pay_sum"/>
		<result property="percent" column="percent"/>
		<result property="needchecked" column="needchecked"/>
		<result property="payStatus" column="pay_status"/>
		<result property="checkStatus" column="check_status"/>
		<result property="status" column="status"/>
		<result property="siteid" column="siteid"/>
		<result property="command" column="command"/>
		<result property="flowId" column="flow_id"/>
		<result property="payplanId" column="payplan_id"/>
	</resultMap>


<!-- 可以重复使用的sql语句可以用 sql这种方式包含起来，在后面调用即可 -->
	<sql id="columnBasic">
		id,contract_id,pay_type,pay_sum,percent,needchecked,check_status,pay_status,siteid,create_time,create_user,flow_id,payplan_id
	</sql>
	
	<sql id="columnVo">
		<include refid="columnBasic"/>
	</sql>


<insert id="insertPayplanTmpList" >
   
    	insert into Tim_Pms_PAYPLAN_Tmp(<include refid="columnBasic"/>)
    	select SEQ_PMS_PAYPLAN.nextval,temp.* from(
        <foreach collection="list" item="item" index="index" separator="union all">
            select  #{item.contractId,jdbcType=NUMERIC},#{item.payType,jdbcType=VARCHAR},#{item.paySum,jdbcType=NUMERIC}
       			 ,#{item.percent,jdbcType=NUMERIC},#{item.needchecked,jdbcType=VARCHAR},#{item.checkStatus,jdbcType=VARCHAR},
       			 #{item.payStatus,jdbcType=VARCHAR},#{item.siteid,jdbcType=VARCHAR},
       			 #{item.createTime,jdbcType=TIMESTAMP},#{item.createUser,jdbcType=VARCHAR}
       			 ,#{item.flowId,jdbcType=VARCHAR},#{item.payplanId,jdbcType=NUMERIC}
            from dual
        </foreach>
        ) temp
    
    
</insert>

<select id="queryPayplanTmpListByContractId" resultMap="payplanTmpVoMap">
	select <include refid="columnBasic" />
	from Tim_Pms_Payplan_Tmp t
	where t.contract_id=#{contractId} 
</select>

<select id="queryPayplanTmpListByFlowId" resultMap="payplanTmpVoMap">
	select <include refid="columnBasic" />
	from Tim_Pms_Payplan_Tmp t
	where t.flow_id=#{flowId} 
</select>

<select id="queryPayplanTmpById" resultMap="payplanTmpVoMap">
	select <include refid="columnBasic" />
	from Tim_Pms_Payplan_Tmp t
	where t.id=#{id} 
</select>

<delete id="deletePayplanTmpByContractId">
	delete Tim_Pms_Payplan_Tmp t
	where t.contract_id=#{contractId}
</delete>

<delete id="deletePayplanTmpByFlowId">
	delete Tim_Pms_Payplan_Tmp t
	where t.flow_id=#{flowId}
</delete>

</mapper>