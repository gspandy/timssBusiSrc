<?xml version="1.0" encoding="UTF-8" ?> 
    <!DOCTYPE mapper 
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.timss.ptw.dao.PtwIsolationPointDao">


	<select id="queryBeanByIsolationPointNo" resultType="PtwIsolationPointVo">
		select t.id,t.pointNo,aa.assetname pointName, t.methodId,pimd.no no,pimd.method
		from ptw_isolation_point_method t ,
			 ptw_isolation_method_define pimd,
			  ast_asset aa
		where t.pointNo = #{pointNo} and t.siteId = #{siteId} and 
			  t.methodId = pimd.id and aa.assetId = t.pointNo and 
			  t.yxbz = 1 and pimd.yxbz=1
		order by pimd.no asc
	</select>
	
	<select id="queryAllBeanVoBySiteId" resultType="PtwIsolationPointVo">
		select t.id,t.pointNo, aa.assetname pointName,t.methodId,pimd.no no,pimd.method
		from ptw_isolation_point_method t ,
			 ptw_isolation_method_define pimd,
			 ast_asset aa
		where t.siteId = #{siteId} and 
			  t.methodId = pimd.id and 
			  aa.assetId = t.pointNo and 
			  t.yxbz = 1 and pimd.yxbz=1
	</select>
	
	<insert id="insertPtwIsolationPoint">
		<selectKey resultType="int" keyProperty="id" order="BEFORE">
			select SEQ_PTW_MORE.nextval from dual
		</selectKey>
		insert into ptw_isolation_point_method
		  (id,pointNo,methodId,siteid,deptid,createuser,modifyuser,
		  createdate,modifydate,yxbz)
		values
		  (#{id},
		  #{pointNo,jdbcType=VARCHAR},
		  #{methodId,jdbcType=VARCHAR},
		  #{siteid,jdbcType=VARCHAR},
		  #{deptid,jdbcType=VARCHAR},
		  #{createuser,jdbcType=VARCHAR},
		  #{modifyuser,jdbcType=VARCHAR},
		  #{createdate,jdbcType=TIMESTAMP},
		  #{modifydate,jdbcType=TIMESTAMP},
		  #{yxbz,jdbcType=NUMERIC})
	</insert>
	
	<update id="deletePtwIsolationPointByPointNo">
		update ptw_isolation_point_method t
		set t.yxbz = 0
		where t.pointNo = #{pointNo} and t.siteId = #{siteId}
	</update>
	
	<update id="deletePtwIsolationPointById">
		update ptw_isolation_point_method t
		set t.yxbz = 0
		where t.id = #{id}
	</update>
	
	<select id="queryIslMehtodByPoinIdAndMethodId" parameterType="PtwIsolationPoint" resultType="PtwIsolationPoint">
		select t.id,t.pointNo, t.methodId,t.siteid, t.deptid, t.yxbz 
		from ptw_isolation_point_method t 
		where t.yxbz = 1 and t.methodId = #{ methodId } and t.pointNo = #{ pointNo }
	</select>

	<select id="queryIsMethodByIsolationPoint" parameterType="PtwIsolationPoint"  resultType="IsMethodPointVo">
	select * from ( select temp.*, a.assetName POINTNAME from ( 
	SELECT p.id id, p.METHODID STDMETHODID, p.POINTNO POINTNO, m.METHOD METHODNAME 
	FROM ( SELECT * FROM PTW_ISOLATION_POINT_METHOD where id = #{ id } ) p 
	LEFT JOIN PTW_ISOLATION_METHOD_DEFINE m ON p.METHODID = m.id ) temp 
	LEFT JOIN AST_ASSET a on temp.POINTNO = a.assetid ) t 
	
	</select>
	
	<delete id="deleteIsolationPoint" parameterType="String">
		DELETE FROM ptw_isolation_point_method  m WHERE m.POINTNO IN(
			SELECT p.assetid POINTNO FROM ast_asset p 
			start with p.assetid= #{ assetId }
			connect by prior p.assetid= p.parentId
		)
	</delete>
	
</mapper> 